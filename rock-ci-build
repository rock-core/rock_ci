#! /bin/bash
#
# Main build script
#
# All script arguments are passed to the autoproj_bootstrap script
#
# See README.txt for a description of all the environment variables that can be
# used to customize its behaviour.
#
#   ROCK_CI_SKIP_SUCCESSFUL: if set to true, any build whose last result was
#     successful is ignored. The default is false.

echo "$0 started at `date` on `lsb_release -a`"
set -ex

ROCK_CI_DIR=$(dirname "$0")
. "$ROCK_CI_DIR/rock-ci-shelllib"

rock_ci_setdefaults

if test "x$ROCK_CI_SKIP_SUCCESSFUL" = "xtrue" && test -f dev/build-successful; then
    echo "last build was successful and SKIP_SUCCESSFUL is set, doing nothing"
    exit 0
fi

if test -z "$MODE"; then
    MODE=auto
fi

if test "x$MODE" = "xincremental"; then
    echo "MODE=incremental, doing an incremental build"
    do_incremental=1
    do_full_cleanup=0
elif test "x$MODE" = "xfull-bootstrap"; then
    echo "MODE=full-bootstrap, doing a full build, including checking out packages"
    do_incremental=0
    do_full_cleanup=1
elif test "x$MODE" = "xbootstrap"; then
    echo "MODE=bootstrap, doing a full build but not checking out packages again. Use full-bootstrap for that"
    do_incremental=0
    do_full_cleanup=0
elif ! test -f dev/build-successful; then
    echo "last build was unsuccessful, doing an incremental build"
    do_incremental=1
    do_full_cleanup=0
else
    echo "doing a full build"
    do_incremental=0
    do_full_cleanup=0
fi

if test "x$do_incremental" = "x1" && test -f dev/build-cleaned; then
    echo "this is an incremental build, but the last build got cleaned, doing nothing"
    exit 0
fi

rm -f dev/build-successful
rm -f dev/build-cleaned

if test "x$do_incremental" = "x0"; then
    if test "x$do_full_cleanup" = "x1"; then
        rm -rf dev
    elif test -d dev; then
        rm -rf dev/install
        find dev -type d -name build -exec rm -rf {} \; -prune
        rm -rf dev/.gems dev/autoproj
    fi
fi

rock_ci_setupdev

export GEM_HOME="$PWD/dev/.gems"
$ROCK_CI_GEM install rdoc yard --no-rdoc --no-ri

echo "Finished preparing, starting build at `date` with $ROCK_CI_RUBY"

# We can finally copy the requested config file and build
rock_ci_autoproj $ROCK_CI_AUTOPROJ_OPTIONS update
rock_ci_autoproj $ROCK_CI_AUTOPROJ_OPTIONS build
touch build-successful

# Delete the stats file if we did not just do a full build
#
# Otherwise, generate the consolidated stats file
if test "x$do_incremental" = "x1"; then
    rm -f dev/install/log/stats.log
else
    "$ROCK_CI_DIR/rock-ci-process-stats" dev/install/log/stats.log \
        > dev/install/log/consolidated-stats.log
fi

mkdir -p logs/build/
cp -r dev/install/log logs/build/`date +%F-%H%M%S`

echo "Done at `date`"

